"""initial

Revision ID: 771e7406ebab
Revises: 
Create Date: 2025-06-28 08:52:53.820992

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '771e7406ebab'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quote',
    sa.Column('quote_id', sa.String(), nullable=False),
    sa.Column('product', sa.String(), nullable=False),
    sa.Column('currency', sa.Enum('USD', 'EUR', 'GBP', 'JPY', name='currency'), nullable=False),
    sa.Column('notional', sa.Float(), nullable=False),
    sa.Column('maturity', sa.String(), nullable=False),
    sa.Column('strike', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('quote_id')
    )
    op.create_index(op.f('ix_quote_quote_id'), 'quote', ['quote_id'], unique=False)
    op.drop_table('enrollments')
    op.drop_table('users')
    op.drop_table('payments')
    op.drop_table('courses')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('courses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='courses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('payments_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('payments_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('enrollments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('enrolled_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('enrollments_course_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('enrollments_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('enrollments_pkey'))
    )
    op.drop_index(op.f('ix_quote_quote_id'), table_name='quote')
    op.drop_table('quote')
    # ### end Alembic commands ###
